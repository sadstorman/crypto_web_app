{"version":3,"sources":["components/ui/Navbar.js","hooks/useForm.js","components/Axie.js","components/Dchess.js","components/Cryptomines.js","components/Pvu.js","components/Home.js","router/Dashboard.js","index.js"],"names":["Navbar","className","to","activeClassName","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","Axie","isLoading","setIsLoading","isClicked","setIsClicked","slp","setSlp","axs","setAxs","changeSlp","setChangeSlp","changeAxs","setChangeAxs","howMuchSlp","formValues","howMuchAxs","formValues2","handleInputChange2","getData","a","axios","get","resp","resp2","usdAxs","data","market_data","current_price","usd","price_change_percentage_24h","usdSlp","useEffect","role","includes","toFixed","type","onChange","placeholder","onClick","Dchess","Cryptomines","eternal","setEternal","changeEternal","setChangeEternal","usdEt","changeEt","Pvu","pvu","setPvu","changePvu","setChangePvu","Home","word","topTen","setTopTen","getTopTen","usdPvu","resp3","resp4","style","width","height","src","alt","map","moneda","image","toUpperCase","id","Dashboard","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.528c572a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    Link,\r\n    NavLink,\r\n} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"container-fluid navbar navbar-expand-sm navbar-dark bg-dark text-center \">\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <Link\r\n                        className=\"navbar-brand ml\"\r\n                        to=\"/\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link btn\"\r\n\r\n                        to=\"/axie\"\r\n                    >\r\n                        Axie\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n\r\n                        to=\"/chess\"\r\n                    >\r\n                        Dchess\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n\r\n                        to=\"/cryptomines\"\r\n                    >\r\n                        Cryptomines\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n\r\n                        to=\"/pvu\"\r\n                    >\r\n                        Pvu\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setValues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset];\r\n}","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n// import Datepicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useForm } from '../hooks/useForm';\r\nexport const Axie = () => {\r\n\r\n    let word = '-'\r\n    // const [dateSelected, setDateSelected] = useState(new Date())\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [isClicked, setIsClicked] = useState(false)\r\n    const [slp, setSlp] = useState(null)\r\n    const [axs, setAxs] = useState(null)\r\n    const [changeSlp, setChangeSlp] = useState(null)\r\n    const [changeAxs, setChangeAxs] = useState(null)\r\n    const [formValues, handleInputChange] = useForm({ howMuchSlp: '' })\r\n    const { howMuchSlp } = formValues\r\n\r\n    const [formValues2, handleInputChange2] = useForm({ howMuchAxs: '' })\r\n    const { howMuchAxs } = formValues2\r\n\r\n    const handleClick = () => {\r\n        setIsClicked(!isClicked)\r\n        setIsLoading(!isLoading)\r\n    }\r\n\r\n    const getData = async () => {\r\n        const resp = await axios.get('https://api.coingecko.com/api/v3/coins/smooth-love-potion')\r\n        const resp2 = await axios.get('https://api.coingecko.com/api/v3/coins/axie-infinity')\r\n        const usdAxs = resp2.data.market_data.current_price.usd\r\n        const changeAxs = resp2.data.market_data.price_change_percentage_24h\r\n        const changeSlp = resp.data.market_data.price_change_percentage_24h\r\n        const usdSlp = resp.data.market_data.current_price.usd\r\n        setSlp(`${usdSlp}`)\r\n        setChangeSlp(`${changeSlp}`)\r\n        setAxs(`${usdAxs}`)\r\n        setChangeAxs(`${changeAxs}`)\r\n        setIsLoading(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [setSlp, isClicked])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"text-center\">Axies</h2>\r\n\r\n            {/* <div className=\"text-center\">\r\n                <label>Start date:</label> <Datepicker selected={dateSelected} dateFormat=\"MM/dd\" maxDate={new Date()} onChange={date => setDateSelected(date)} />\r\n                <h3> Amount of days: <b className=\"text-primary\">{dateSelected.getUTCDate()} </b> </h3>\r\n                <h3> $ per day: <b className=\"text-primary\">6</b> </h3>\r\n            </div> */}\r\n\r\n\r\n\r\n            <div className=\"row mt-4\">\r\n\r\n\r\n                <div className=\"col-sm\">\r\n                    <h3> SLP actual value: {isLoading ? (<div className=\"spinner-border text-light\" role=\"status\">\r\n                    </div>) : ((changeSlp.includes(word) ? (<h4 className=\"text-danger text-center\">{(slp * 1).toFixed(3)} $<h6 className=\"mt-1\"> change percentage {(changeSlp * 1).toFixed(2)} %</h6> </h4>) : (<h4 className=\"text-success text-center\">{(slp * 1).toFixed(3)} $<h6 className=\"mt-1\"> change percentage {(changeSlp * 1).toFixed(2)} %</h6> </h4>)))}</h3>\r\n\r\n                    <h3> AXS actual value: {isLoading ? (<div className=\"spinner-border text-light\" role=\"status\">\r\n                    </div>) : ((changeAxs.includes(word) ? (<h4 className=\"text-danger text-center\">{(axs * 1).toFixed(1)} $<h6 className=\"mt-1\"> change percentage {(changeAxs * 1).toFixed(2)} %</h6> </h4>) : (<h4 className=\"text-success text-center\">{(axs * 1).toFixed(1)} $<h6 className=\"mt-1\"> change percentage {(changeAxs * 1).toFixed(2)} %</h6> </h4>)))}</h3>\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col-sm text-center d-flex flex-column form-group\">\r\n\r\n                    <div className=\"p-4\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <span className=\"input-group-text\">$</span>\r\n                            <input type=\"number\" name=\"howMuchSlp\" value={howMuchSlp} onChange={handleInputChange} placeholder=\"SLP\" className=\"form-control\" aria-label=\"Amount (to the nearest dollar)\" />\r\n                            <span className=\"input-group-text\">{(howMuchSlp * slp).toFixed(1)} $</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-4\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <span className=\"input-group-text\">$</span>\r\n                            <input type=\"number\" name=\"howMuchAxs\" value={howMuchAxs} onChange={handleInputChange2} placeholder=\"AXS\" className=\"form-control\" aria-label=\"Amount (to the nearest dollar)\" />\r\n                            <span className=\"input-group-text\">{(howMuchAxs * axs).toFixed(1)} $</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"btn btn-lg btn-warning mt-4\" onClick={handleClick} > refresh values</button>\r\n            </div>\r\n\r\n\r\n            <footer className=\"fixed-bottom text-center\"> <p className=\"text-success\">Ayudame a salir de argentina: 0x0b4b8Df226D71620AC68FaC561E69aA13e02987f</p></footer>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Dchess = () => {\r\n    return (\r\n        <div>\r\n            <h2>Dchess</h2>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useForm } from '../hooks/useForm'\r\n\r\nexport const Cryptomines = () => {\r\n    let word = '-'\r\n\r\n    const [eternal, setEternal] = useState('')\r\n    const [changeEternal, setChangeEternal] = useState('')\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [isClicked, setIsClicked] = useState(false)\r\n    const [formValues, handleInputChange] = useForm({ howMuchSlp: '' })\r\n    const { howMuchSlp } = formValues\r\n\r\n    const handleClick = () => {\r\n        setIsClicked(!isClicked)\r\n        setIsLoading(!isLoading)\r\n    }\r\n\r\n\r\n    const getData = async () => {\r\n        const resp = await axios.get('https://api.coingecko.com/api/v3/coins/cryptomines-eternal')\r\n        const usdEt = resp.data.market_data.current_price.usd\r\n        const changeEt = resp.data.market_data.price_change_percentage_24h\r\n        setEternal(`${usdEt}`)\r\n        setChangeEternal(`${changeEt}`)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n\r\n    }, [setEternal, isLoading])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"text-center\">Cryptomines</h2>\r\n\r\n            <div className=\"row mt-4\">\r\n\r\n\r\n                <div className=\"col-sm\">\r\n                    <h3> Eternal actual value: {isLoading ? (<div className=\"spinner-border text-light\" role=\"status\">\r\n                    </div>) : ((changeEternal.includes(word)? (<h4 className=\"text-danger text-center\">{eternal} $<h6 className=\"mt-1\"> change percentage {(changeEternal * 1).toFixed(2)} %</h6> </h4>) : (<h4 className=\"text-success text-center\">{eternal} $<h6 className=\"mt-1\"> change percentage {(changeEternal * 1).toFixed(2)} %</h6> </h4>)))}</h3>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-sm text-center d-flex flex-column form-group\">\r\n\r\n                    <div className=\"p-4\">\r\n                        <div className=\"input-group mb-3 mt-2\">\r\n                            <span className=\"input-group-text\">$</span>\r\n                            <input type=\"number\" name=\"howMuchSlp\" value={howMuchSlp} onChange={handleInputChange} placeholder=\"Eternal\" className=\"form-control\" aria-label=\"Amount (to the nearest dollar)\" />\r\n                            <span className=\"input-group-text\">{(howMuchSlp * eternal).toFixed(1)} $</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <button className=\"btn btn-lg btn-warning mt-2\" onClick={handleClick} > refresh values</button>\r\n            </div>\r\n\r\n\r\n            <footer className=\"fixed-bottom text-center\"> <p className=\"text-success\">Ayudame a salir de argentina: 0x0b4b8Df226D71620AC68FaC561E69aA13e02987f</p></footer>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useForm } from '../hooks/useForm'\r\n\r\nexport const Pvu = () => {\r\n    let word = '-'\r\n    const [pvu, setPvu] = useState('')\r\n    const [changePvu, setChangePvu] = useState('')\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [isClicked, setIsClicked] = useState(false)\r\n    const [formValues, handleInputChange] = useForm({ howMuchSlp: '' })\r\n    const { howMuchSlp } = formValues\r\n\r\n    const handleClick = () => {\r\n        setIsClicked(!isClicked)\r\n        setIsLoading(!isLoading)\r\n    }\r\n\r\n    const getData = async () => {\r\n        const resp = await axios.get('https://api.coingecko.com/api/v3/coins/plant-vs-undead-token')\r\n        const usdEt = resp.data.market_data.current_price.usd\r\n        const changeEt = resp.data.market_data.price_change_percentage_24h\r\n        setPvu(`${usdEt}`)\r\n        setChangePvu(`${changeEt}`)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [setPvu, isLoading])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"text-center\">PVU</h2>\r\n\r\n            <div className=\"row mt-4\">\r\n\r\n\r\n                <div className=\"col-sm\">\r\n                    <h3> PVU actual value: {isLoading ? (<div className=\"spinner-border text-light\" role=\"status\">\r\n                    </div>) : ((changePvu.includes(word) ? (<h4 className=\"text-danger text-center\">{(pvu * 1).toFixed(3)} $<h6 className=\"mt-1\"> change percentage {(changePvu * 1).toFixed(2)} %</h6> </h4>) : (<h4 className=\"text-success text-center\">{(pvu * 1).toFixed(3)} $<h6 className=\"mt-1\"> change percentage {(changePvu * 1).toFixed(2)} %</h6> </h4>)))}</h3>\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col-sm text-center d-flex flex-column form-group\">\r\n\r\n                    <div className=\"p-4\">\r\n                        <div className=\"input-group mb-3 mt-2\">\r\n                            <span className=\"input-group-text\">$</span>\r\n                            <input type=\"number\" name=\"howMuchSlp\" value={howMuchSlp} onChange={handleInputChange} placeholder=\"PVU\" className=\"form-control\" aria-label=\"Amount (to the nearest dollar)\" />\r\n                            <span className=\"input-group-text\">{(howMuchSlp * pvu).toFixed(1)} $</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <button className=\"btn btn-lg btn-warning mt-2\" onClick={handleClick} > refresh values</button>\r\n            </div>\r\n\r\n\r\n            <footer className=\"fixed-bottom text-center\"> <p className=\"text-success\">Ayudame a salir de argentina: 0x0b4b8Df226D71620AC68FaC561E69aA13e02987f</p></footer>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport '../styles/cards.css'\r\n\r\nexport const Home = () => {\r\n    let word = '-'\r\n\r\n    const [isClicked, setIsClicked] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const [topTen, setTopTen] = useState([])\r\n\r\n    const [pvu, setPvu] = useState('')\r\n    const [changePvu, setChangePvu] = useState('')\r\n\r\n    const [eternal, setEternal] = useState('')\r\n    const [changeEternal, setChangeEternal] = useState('')\r\n\r\n    const [slp, setSlp] = useState('')\r\n    const [changeSlp, setChangeSlp] = useState('')\r\n    const [axs, setAxs] = useState('')\r\n    const [changeAxs, setChangeAxs] = useState('')\r\n\r\n    const handleClick = () => {\r\n        setIsClicked(!isClicked)\r\n        setIsLoading(!isLoading)\r\n    }\r\n\r\n    const getTopTen = async () => {\r\n        const resp = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false')\r\n        setTopTen(resp.data)\r\n    }\r\n\r\n    const getData = async () => {\r\n        const resp = await axios.get('https://api.coingecko.com/api/v3/coins/plant-vs-undead-token')\r\n        const usdPvu = resp.data.market_data.current_price.usd\r\n        const changePvu = resp.data.market_data.price_change_percentage_24h\r\n        setPvu(`${usdPvu}`)\r\n        setChangePvu(`${changePvu}`)\r\n\r\n        const resp2 = await axios.get('https://api.coingecko.com/api/v3/coins/cryptomines-eternal')\r\n        const usdEt = resp2.data.market_data.current_price.usd\r\n        const changeEt = resp2.data.market_data.price_change_percentage_24h\r\n        setEternal(`${usdEt}`)\r\n        setChangeEternal(`${changeEt}`)\r\n\r\n        const resp3 = await axios.get('https://api.coingecko.com/api/v3/coins/smooth-love-potion')\r\n        const resp4 = await axios.get('https://api.coingecko.com/api/v3/coins/axie-infinity')\r\n\r\n        const usdAxs = resp4.data.market_data.current_price.usd\r\n        const changeAxs = resp4.data.market_data.price_change_percentage_24h\r\n        const changeSlp = resp3.data.market_data.price_change_percentage_24h\r\n        const usdSlp = resp3.data.market_data.current_price.usd\r\n        setSlp(`${usdSlp}`)\r\n        setChangeSlp(`${changeSlp}`)\r\n        setAxs(`${usdAxs}`)\r\n        setChangeAxs(`${changeAxs}`)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        getTopTen()\r\n    }, [isLoading, setPvu, setEternal, setSlp, setChangeSlp, setAxs, setChangeAxs])\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h1 className=\"text-center\">Home</h1>\r\n            <div className=\"text-center\">\r\n                <button className=\"btn btn-lg btn-primary mb-2 w-100 botoncito\" onClick={handleClick} > refresh values</button>\r\n            </div>\r\n\r\n            {\r\n                isLoading ? ((<div className=\"d-flex justify-content-center margin\"> <div className=\"spinner-border text-center text-light\" style={{ width: \"12rem\", height: \"12rem\" }} role=\"status\">\r\n                </div></div>)) : (<div className=\"container margen\">\r\n\r\n                    <div className=\"row-col-2 \">\r\n\r\n                        <div className='col-12 col-sm-12 text-center'>\r\n\r\n                            <div className=\"card-group\">\r\n                                <div className=\"card rounded m-2\">\r\n                                    <div className=\"card-body\">\r\n                                        <img className=\"rounded mx-auto  h-50 img-fluid\" src='/pvu.png' alt=\"pvu\" />\r\n                                        <h4 className=\"card-title bold\">PVU</h4>\r\n                                        <p className=\"card-text\">{(pvu * 1).toFixed(2)} $</p>\r\n                                    </div>\r\n                                    <div className=\"card-footer\">\r\n                                        {\r\n                                            (changePvu.includes(word) ? (<small className=\"text-danger\">{(changePvu * 1).toFixed(2)} %</small>) : (<small className=\"text-success\">{(changePvu * 1).toFixed(2)} %</small>))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"card rounded m-2\">\r\n                                    <div className=\"card-body\">\r\n                                        <img className=\"rounded mx-auto  h-50 img-fluid\" src=\"/eternal.png\" alt=\"Eternal\" />\r\n                                        <h4 className=\"card-title bold\">ETERNAL</h4>\r\n                                        <p className=\"card-text\">{(eternal * 1).toFixed(2)} $</p>\r\n                                    </div>\r\n                                    <div className=\"card-footer\">\r\n                                        {\r\n                                            (changeEternal.includes(word) ? (<small className=\"text-danger\">{(changeEternal * 1).toFixed(2)} %</small>) : (<small className=\"text-success\"> {(changeEternal * 1).toFixed(2)} %</small>))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='col-12  col-sm-12 text-center'>\r\n\r\n                            <div className=\"card-group\">\r\n                                <div className=\"card rounded m-2\" >\r\n                                    <div className=\"card-body\">\r\n                                        <img className=\"rounded mx-auto  h-50 img-fluid\" src=\"/slp.png\" alt=\"SLP\" />\r\n                                        <h4 className=\"card-title bold\">SLP</h4>\r\n                                        <p className=\"card-text\">{(slp * 1).toFixed(3)} $</p>\r\n                                    </div>\r\n                                    <div className=\"card-footer\">\r\n                                        {\r\n                                            (changeSlp.includes(word) ? (<small className=\"text-danger\"> {(changeSlp * 1).toFixed(2)} % </small>) : (<small className=\"text-success\"> {(changeSlp * 1).toFixed(2)} %</small>))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"card rounded m-2\">\r\n                                    <div className=\"card-body\">\r\n                                        <img className=\"rounded mx-auto h-50 img-fluid\" src=\"/axs.png\" alt=\"AXS\" />\r\n                                        <h4 className=\"card-title bold\">AXS</h4>\r\n                                        <p className=\"card-text\">{(axs * 1).toFixed(1)} $</p>\r\n                                    </div>\r\n                                    <div className=\"card-footer\">\r\n                                        {\r\n                                            (changeAxs.includes(word) ? (<small className=\"text-danger\">{(changeAxs * 1).toFixed(2)} % </small>) : (<small className=\"text-success\">{(changeAxs * 1).toFixed(2)} % </small>))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12 col-sm-12 text-center mt-4\">\r\n                        <h3> <u>TOP TEN CRYPTOS</u></h3>\r\n                        <ol className=\"text-center\">\r\n                            {topTen.map(moneda => {\r\n                                return <p className=\"text-success\" key={moneda.id}\r\n                                ><img className=\"img img-fluid\" src={moneda.image} alt=\"cryptoIMG\" /> {(moneda.name).toUpperCase()} -> {(moneda.current_price * 1).toFixed(1)} $ <small className=\"text-light\"> change {(moneda.price_change_percentage_24h * 1).toFixed(2)} % </small></p>\r\n                            })}\r\n                        </ol>\r\n                    </div>\r\n\r\n                    <footer className=\"footer text-center margen\"> <p className=\"text-success\">Ayudame a salir de argentina: 0x0b4b8Df226D71620AC68FaC561E69aA13e02987f</p></footer>\r\n\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Navbar } from '../components/ui/Navbar'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { Axie } from '../components/Axie';\r\nimport { Dchess } from '../components/Dchess';\r\nimport { Cryptomines } from '../components/Cryptomines';\r\nimport { Pvu } from '../components/Pvu';\r\nimport { Home } from '../components/Home';\r\n\r\nexport const Dashboard = () => {\r\n    return (\r\n        <Router>\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-2\">\r\n\r\n                <Switch>\r\n                    <Route exact path=\"crypto_web_app/\" component={Home} />\r\n                    <Route exact path=\"crypto_web_app/axie\" component={Axie} />\r\n                    <Route exact path=\"crypto_web_app/chess\" component={Dchess} />\r\n                    <Route exact path=\"crypto_web_app/pvu\" component={Pvu} />\r\n                    <Route exact path=\"crypto_web_app/cryptomines\" component={Cryptomines} />\r\n\r\n                    <Redirect to=\"crypto_web_app/\" />\r\n                </Switch>\r\n            </div>\r\n\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Dashboard } from './router/Dashboard';\nimport './styles/index.css'\nimport \"bootswatch/dist/darkly/bootstrap.min.css\"\n\nReactDOM.render(\n  <Dashboard />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}